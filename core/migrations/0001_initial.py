# Generated by Django 5.0.6 on 2025-09-03 21:31

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('timezone', models.CharField(default='America/New_York', max_length=64)),
                ('hashtags', models.TextField(blank=True, help_text='comma separated default tags')),
                ('post_windows', models.CharField(default='08:00,13:00,20:00', max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='TTSAudio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('voice_id', models.CharField(db_index=True, max_length=100)),
                ('text_hash', models.CharField(db_index=True, max_length=64)),
                ('text_excerpt', models.CharField(max_length=200)),
                ('settings', models.JSONField(blank=True, default=dict)),
                ('file', models.FileField(blank=True, null=True, upload_to='tts/')),
                ('file_url', models.URLField(blank=True)),
                ('eleven_history_id', models.CharField(blank=True, max_length=64)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='AvatarProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('avatar_name', models.CharField(max_length=100)),
                ('heygen_avatar_id', models.CharField(blank=True, max_length=100)),
                ('voice_name', models.CharField(max_length=100)),
                ('elevenlabs_voice_id', models.CharField(blank=True, max_length=100)),
                ('image', models.ImageField(blank=True, null=True, upload_to='avatars/')),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.brand')),
            ],
        ),
        migrations.CreateModel(
            name='PublishTarget',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('platform', models.CharField(choices=[('yt', 'YouTube'), ('ig', 'Instagram'), ('fb', 'Facebook'), ('tt', 'TikTok')], max_length=8)),
                ('enabled', models.BooleanField(default=True)),
                ('channel_or_page_id', models.CharField(blank=True, max_length=100)),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.brand')),
            ],
        ),
        migrations.CreateModel(
            name='Template',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('template_id', models.CharField(max_length=64)),
                ('engine', models.CharField(choices=[('shotstack', 'Shotstack'), ('cloudinary', 'Cloudinary')], default='shotstack', max_length=16)),
                ('aspect', models.CharField(default='9:16', max_length=16)),
                ('duration_sec', models.PositiveIntegerField(default=30)),
                ('payload_json', models.JSONField(blank=True, default=dict)),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.brand')),
            ],
        ),
        migrations.CreateModel(
            name='ScriptRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mode', models.CharField(choices=[('Single', 'Single'), ('Discover', 'Discover'), ('GenerateList', 'GenerateList')], default='Single', max_length=16)),
                ('icon_or_topic', models.CharField(max_length=200)),
                ('notes', models.TextField(blank=True)),
                ('duration', models.CharField(choices=[('15s', '15sStory'), ('30s', '30sReel'), ('60s', '60sReel')], default='30s', max_length=8)),
                ('status', models.CharField(choices=[('New', 'New'), ('Drafted', 'Drafted'), ('NeedsFix', 'Needs Fix'), ('Assembling', 'Assembling'), ('Rendered', 'Rendered'), ('Ready', 'Ready to Schedule'), ('Scheduled', 'Scheduled'), ('Posted', 'Posted'), ('Pulled', '24h Pulled'), ('Published', 'Published'), ('Approved', 'Approved for Editing')], default='New', max_length=20)),
                ('draft_script', models.TextField(blank=True)),
                ('qc_json', models.JSONField(blank=True, null=True)),
                ('final_script', models.TextField(blank=True)),
                ('caption_yt', models.TextField(blank=True)),
                ('caption_tt', models.TextField(blank=True)),
                ('caption_ig_reels', models.TextField(blank=True)),
                ('caption_ig_stories', models.TextField(blank=True)),
                ('caption_fb_reels', models.TextField(blank=True)),
                ('audio_url', models.URLField(blank=True)),
                ('asset_url', models.URLField(blank=True)),
                ('edit_url', models.URLField(blank=True)),
                ('file_name', models.CharField(blank=True, max_length=200)),
                ('scheduled_slot', models.CharField(blank=True, max_length=16)),
                ('publish_at', models.DateTimeField(blank=True, null=True)),
                ('post_ids', models.JSONField(blank=True, default=dict)),
                ('performance_json', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('avatar', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.avatarprofile')),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.brand')),
                ('template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.template')),
            ],
        ),
    ]
