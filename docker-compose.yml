version: "3.9"

services:
  web:
    build: .
    command: bash -lc "python manage.py makemigrations && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    ports: ["8000:8000"]
    env_file: [.env]
    volumes:
      - .:/app
      - media:/app/media
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped

  worker:
    build: .
    command: celery -A hmva worker --loglevel=INFO
    env_file: [.env]
    volumes:
      - .:/app
      - media:/app/media
    depends_on:
      redis:
        condition: service_healthy
      web:
        condition: service_started
    restart: unless-stopped

  beat:
    build: .
    command: celery -A hmva beat --loglevel=INFO
    env_file: [.env]
    volumes:
      - .:/app
      - media:/app/media
    depends_on:
      redis:
        condition: service_healthy
      web:
        condition: service_started
    restart: unless-stopped

  flower:
    image: mher/flower:2.0.1
    command: ["celery", "--broker=redis://redis:6379/0", "flower", "--address=0.0.0.0", "--port=5555"]
    depends_on:
      redis:
        condition: service_started
    restart: unless-stopped
    ports:
      - "5555:5555"



  redis:
    image: redis:7-alpine
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 10
    volumes:
      - redisdata:/data
    restart: unless-stopped

volumes:
  media:
  redisdata:
